SHELL = /bin/bash    # This should always be present in a Makefile

#--------------------------------------- Select some defaults
# CC           = mpicc
# OPTIMIZE     = -Wall -g -O3
# MPI_INCL     =
# MPI_LIBS     = -lmpi
# GSL_INCL     =
# GSL_LIBS     =
# CFITSIO_INCL =
# CFITSIO_LIBS =
# HDF5_INCL    =
# HDF5_LIBS    =

#--------------------------------------- Select target computer

# Have Makefile detect system. Works on Taurus/Lisa.
# On MBP set env variable SYSTYPE because hostname depends on wifi connection?
ifndef SYSTYPE
    SYSTYPE := $(shell hostname)
endif
#SYSTYPE="API"
#SYSTYPE="MBP"
#SYSTYPE="Taurus"
#SYSTYPE="Lisa"

#--------------------------------------- Adjust settings for target computer

# Edit by TLRH, 2015/12/03
ifeq ($(SYSTYPE),API)
CC           = mpicc
OPTIMIZE     = -Wall -g -O3
MPI_INCL     = -I/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/incl
MPI_LIBS     = -L/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/lib
GSL_INCL     = -I/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/incl
GSL_LIBS     = -L/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/lib
CFITSIO_INCL = -I/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/incl
CFITSIO_LIBS = -L/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/lib
HDF5_INCL    = -I
HDF5_LIBs    = -L
endif

# Edit by TLRH, 2016/04/19
ifeq ($(SYSTYPE),MBP)
CC           = mpicc
OPTIMIZE     = -Wall -g -O3
MPI_INCL     = -I/usr/local/Cellar/open-mpi/1.10.2/include
MPI_LIBS     = -L/usr/local/Cellar/open-mpi/1.10.2/lib
GSL_INCL     = -I/usr/local/Cellar/gsl/1.16/include
GSL_LIBS     = -L/usr/local/Cellar/gsl/1.16/lib
CFITSIO_INCL = -I/usr/local/Cellar/cfitsio/3.370/include
CFITSIO_LIBS = -L/usr/local/Cellar/cfitsio/3.370/lib
HDF5_INCL    = -I/usr/local/Cellar/hdf5/1.8.16_1/include
HDF5_LIBS    = -L/usr/local/Cellar/hdf5/1.8.16_1/bin -lhdf5 -lz -lsz
endif

# Edit by TLRH, 2016/04/22
ifeq ($(SYSTYPE),taurus)
CC           = mpicc
OPTIMIZE     = -Wall -g -O3
MPI_INCL     = -I/scratch/timo/prerequisites-10.0/include
MPI_LIBS     = -L/scratch/timo/prerequisites-10.0/lib
GSL_INCL     = -I/scratch/timo/prerequisites-10.0/include
GSL_LIBS     = -L/scratch/timo/prerequisites-10.0/lib
CFITSIO_INCL = -I/scratch/timo/prerequisites-10.0/include
CFITSIO_LIBS = -L/scratch/timo/prerequisites-10.0/lib
HDF5INCL     = -I/scratch/timo/prerequisites-10.0/include
HDF5LIB      = -L/scratch/timo/prerequisites-10.0/bin -lhdf5 -lz -lsz
endif


# TODO: set correct include and lib paths?
# TODO: check if this breaks making if env var is not set
ifeq ($(SYSTYPE),*.lisa.surfsara.nl)

# Make sure env variables are set. They should contain the lib and include paths
ifndef SARA_INCLUDE_PATH
$(error SARA_INCLUDE_PATH not set.)
endif
ifndef SARA_LIBRARY_PATH
$(error SARA_LIBRARY_PATH not set.)
endif

CC           = mpicc
OPTIMIZE     = -Wall -g -O3
MPI_INCL     = -I$(SARA_INCLUDE_PATH)
MPI_LIBS     = -L$(SARA_LIBRARY_PATH)
GSL_INCL     = -I$(SARA_INCLUDE_PATH)
GSL_LIBS     = -L$(SARA_LIBRARY_PATH)
CFITSIO_INCL = -I/home/timoh/prerequisites-10.0/include
CFITSIO_LIBS = -L/home/timoh/prerequisites-10.0/lib
HDF5INCL     = -I$(SARA_INCLUDE_PATH)
HDF5LIB      = -L$(SARA_LIBRARY_PATH) -lhdf5 -lz -lsz
endif


ifneq (HAVE_HDF5,$(findstring HAVE_HDF5,$(OPT)))
HDF5INCL =
HDF5LIB  =
endif


EXEC = P-Smac2

SRCDIR	= src/

OBJFILES= aux.o setup.o main.o domain_decomp.o \
		  project_sph.o timing.o tree.o  \
		  unit.o cosmo.o healpix.o print_settings.o sph.o \
		  io/input.o \
			io/gadget.o \
			io/user.o \
			io/fits.o \
		  effects/effects.o \
		  	effects/density.o \
			effects/velocity.o \
			effects/fkp.o \
			effects/pressure.o \
			effects/temp.o \
			effects/xray.o \
			effects/bfld.o \
			effects/sz.o \
			effects/cr_gammas.o \
			effects/synchrotron.o \
			effects/analytic_synchrotron.o \
			effects/cre_secondaries.o \
			effects/cre_powerlaw.o \
			effects/cre_tabulated.o \
			effects/cre_compressed.o \
			effects/dm_annihilation.o \
			effects/rm.o \
			effects/radtransfer.o \
			effects/coulomb.o \
			effects/shocks.o


OBJS	= $(addprefix $(SRCDIR),$(OBJFILES))

INCLFILES	= globals.h  tree.h cosmo.h unit.h timing.h  config.h proto.h \
			  macro.h constants.h \
			  io/gadget.h \
			  		io/fits.h \
			  effects/effects.h \
			  ../Makefile

INCL = $(addprefix $(SRCDIR),$(INCLFILES))

CFLAGS = -fopenmp -std=c99 $(OPTIMIZE) $(CFITSIO_INCL) $(GSL_INCL) $(MPI_INCL)

# ifeq (NOTYPEPREFIX_FFTW,$(findstring NOTYPEPREFIX_FFTW,$(OPT)))    # fftw installed with type prefix?
#   FFTW_LIB = $(FFTW_LIBS) -lrfftw_mpi -lfftw_mpi -lrfftw -lfftw
# else
# ifeq (DOUBLEPRECISION_FFTW,$(findstring DOUBLEPRECISION_FFTW,$(OPT)))
#   FFTW_LIB = $(FFTW_LIBS) -ldrfftw_mpi -ldfftw_mpi -ldrfftw -ldfftw
# else
#   FFTW_LIB = $(FFTW_LIBS) -lsrfftw_mpi -lsfftw_mpi -lsrfftw -lsfftw
# endif
# endif


LIBS = -lm -lgsl -lgslcblas -lcfitsio \
		  $(MPI_LIBS) $(GSL_LIBS) $(CFITSIO_LIBS)

$(EXEC) : $(OBJS)
	$(CC) $(CFLAGS)  $(OBJS)  $(LIBS) -o $(EXEC)
	cd src && ctags  *.[ch]

$(OBJS)	: $(INCL)

$(SRCDIR)config.h : Config
	sed '/^#/d; /^$$/d; s/^/#define /g' Config > $(SRCDIR)config.h

$(SRCDIR)print_settings.c : Config
	echo '#include "globals.h"' >  $(SRCDIR)print_settings.c
	echo 'void print_compile_time_settings(){' >> $(SRCDIR)print_settings.c
	echo 'rprintf("Compiled with : \n"' >> $(SRCDIR)print_settings.c
	sed '/^#/d; /^$$/d; s/^/"   /g; s/$$/ \\n"/g;' Config >>  $(SRCDIR)print_settings.c
	echo ');}' >> $(SRCDIR)print_settings.c

clean		:
	rm -f  $(OBJS) $(EXEC) src/config.h src/print_settings.c

install	:
	cp -i $(EXEC) ~/bin

help	:
	@echo SYSTYPE=${SYSTYPE}
	@echo ${CC}
	@echo ${MPI_LIBS}
	@echo ${MPI_INCL}
